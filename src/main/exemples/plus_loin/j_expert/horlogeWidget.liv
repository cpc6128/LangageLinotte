greffons tweak

/*
La gestion de la transparence ne fonctionne pas correctement sur certains systèmes
d'exploitation.
*/

globale
	rayon seconde est un nombre 
	rayon minute est un nombre 
	rayon heure est un nombre 

Principal :
	cadre est un cercle,  x prend 60, y prend 60, couleur prend "lapis-lazuli", plein prend "oui", rayon prend 50, transparence prend 0,position prend 2
	contour est un cercle,  x prend 60, y prend 60, couleur prend "rose mountbatten", plein prend "non", rayon prend 54-60, transparence prend 70,position prend 1, taille prend 5
	centre est un cercle,  x prend 60, y prend 60, couleur prend "anthracite", plein prend "oui", rayon prend 5, transparence prend 90,position prend 5
	fond est une toile, bordure prend "non" ,  audessus prend "oui",x prend ecranh-140, y prend ecranv-160, largeur prend 120, hauteur prend 140 ,	pointeur prend "main"
	a_heure est un ligne, transparence prend 90, taille prend 4, couleur prend "chocolat",  x1 prend 60,  y1 prend 60, x2 prend 60, y2 prend 60, position prend 3
	a_minute est un ligne, transparence prend 90, taille prend 2, couleur prend "rouge ponceau",  x1 prend 60, y1 prend 60, x2 prend 60, y2 prend 60, position prend 3
	a_seconde est un ligne, transparence prend 90, taille prend 1, couleur prend "gris de lin",  x1 prend 60, y1 prend 60, x2 prend 60, y2 prend 60, position prend 2
	tweak est un tweak
	début
		efface toile
		projette fond & cadre & centre & a_heure & a_minute & a_seconde & contour
		tweak.toileinvisible()
		fais réagir cadre à "clic souris" pour fin
		fais réagir cadre à "souris entrante" pour plus clair
		fais réagir cadre à "souris sortante" pour plus foncé
		appelle moteur avec a_heure, a_minute, a_seconde
		De 0 à 60
			transparence@cadre prend joker
			transparence@contour prend joker
			incrémente rayon seconde
			incrémente rayon minute
			incrémente rayon heure
			incrémente rayon@contour
			attends 0.05 seconde
		Ferme
		tant que vrai
			temporise
		ferme

Moteur :
	*a_heure est un ligne
	*a_minute est un ligne
	*a_seconde est un ligne
	début
		tant que vrai
			// Affichage des secondes :
			angle seconde est un nombre valant seconde * pi / 30  - pi / 2
			x seconde est un nombre valant (x1@a_seconde) + 0.8 * rayon seconde * cos ( degré(angle seconde))
			y seconde est un nombre valant (y1@a_seconde) + 0.8 * rayon seconde * sin ( degré(angle seconde))
			// Affichage des minutes :
			angle minute est un nombre valant (minute + seconde/60) * pi / 30  - pi / 2
			x minute est un nombre valant 60 + (0.7 * rayon minute) * cos (degré(angle minute))
			y minute est un nombre valant 60 + (0.7 * rayon minute) * sin (degré(angle minute))
			// Affichage des heures :
			angle heure est un nombre valant (heure + minute/60)*  2 * pi / 12  - pi / 2
			x heure est un nombre valant 60 + (0.5 * rayon heure) * cos (degré(angle heure))
			y heure est un nombre valant 60 + (0.5 * rayon heure) * sin (degré(angle heure))
			x2@a_seconde prend x seconde
			y2@a_seconde prend y seconde
			x2@a_minute prend x minute
			y2@a_minute prend y minute
			x2@a_heure prend x heure
			y2@a_heure prend y heure
			attends 1 secondes
		ferme

Degré :
	* angle :: nombre
	début
		retourne 180 * angle / pi

Plus clair :
	* cercle :: cercle
	début
		transparence@cercle prend 30
		reviens

Plus foncé :
	* cercle :: cercle
	début
		transparence@cercle prend 60
		reviens

Fin :
	début
		termine