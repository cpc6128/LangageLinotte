bibliothèque
	commun référence "../j_expert/reseau/TCPCommun.liv"
espèces
	espèce serveur
globale
	form est un formulaire, titre prend "Démonstration : interface graphique avec Linotte {version}", largeur prend 800,
			hauteur prend 600, icône prend "medias/logo.png"
	présentation est un étiquette, texte prend "Démonstration des composants graphiques en langage Linotte",
			x prend 180, y prend 5, couleurtexte prend "rouge", couleurfond prend "noir", taille prend 3
	onglet est un onglet, x prend 25, y prend 30,hauteur prend 500 , largeur prend 720, visible prend "non"
	indicateur est un indicateur, x prend 180, y prend 100, valeur prend 0, largeur prend 200, hauteur prend 20, visible prend "oui"
	m1 est un menu, texte prend "Menu"
	m2 est un menu, texte prend "Sous-Menu"
	sm1 est un sousmenu, texte prend "A propos", icône prend "medias/internet-group-chat.png"
	sm2 est un sousmenu, texte prend "Quitter", icône prend "medias/post.png"
	case_menu est un menucaseàcocher, texte prend "Icône rouge ?", valeur prend "vrai", icône prend "medias/rouge.png"
	/*Panneaux des onglets*/
	panneau_toile est un panneau
	panneau_toile2 est un panneau
	panneau_boutons est un panneau
	panneau_table est un panneau
	panneau_image est un panneau
	panneau_3D est un panneau
	panneau_radio est un panneau
	panneau_popup est un panneau
	panneau_fx est un panneau
	panneau_im est un panneau
	/*onglet toile*/
	xtoile est un xtoile, x prend 0, y prend 0
	zonex est un nombre valant -2
	zoney est un nombre valant -2
	zonew est un nombre valant 4
	zoneh est un nombre valant 4
	crayon est un crayon, couleur prend "écarlate", pointe prend "non"
	fond est une toile, hauteur prend 500, largeur prend 720
	/*onglet toile horloge*/
	ciel est une toile, hauteur prend 500, largeur prend 720, principale prend "non", couleur prend "charbonneux"
	xtoile2 est un xtoile, x prend 0, y prend 0, toile prend "ciel"
	lumière douce est un texte valant "oscuro"
	lumière clair est un texte valant "menthe à l'eau"
	décallage est un nombre valant -95
	élément v est un polygone, toile prend "ciel", couleur prend lumière douce, plein prend "oui", x prend 0, y prend 0, dx1 prend 10 ,dy1 prend -10, dx2 prend 20 ,dy2 prend 0,     			dx3 prend 20 ,dy3 prend 40, dx4 prend 10 ,dy4 prend 50,     			dx5 prend 0 ,dy5 prend 40
	élément h est un polygone, toile prend "ciel", couleur prend lumière douce, plein prend "oui", x prend 0, y prend 0, dx1 prend 10 ,dy1 prend -10, dx2 prend 38 ,dy2 prend -10,     			dx3 prend 48 ,dy3 prend 0, dx4 prend 38 ,dy4 prend 10,     			dx5 prend 10 ,dy5 prend 10
	chiffre1 est un casier de polygone 
	chiffre2 est un casier de polygone 
	chiffre3 est un casier de polygone 
	chiffre4 est un casier de polygone 
	chiffre5 est un casier de polygone 
	chiffre6 est un casier de polygone 
	rond1 est un cercle, toile prend "ciel", couleur prend lumière douce,  x prend 285 + décallage, y prend 230, rayon prend 20, plein prend "oui"
	rond2 est un cercle, toile prend "ciel", toile prend "ciel", couleur prend lumière douce,  x prend 285 + décallage, y prend 290, rayon prend 20, plein prend "oui"
	rond3 est un cercle, toile prend "ciel", couleur prend lumière douce,  x prend 506 + décallage, y prend 230, rayon prend 20, plein prend "oui"
	rond4 est un cercle, toile prend "ciel", couleur prend lumière douce,  x prend 506 + décallage, y prend 290, rayon prend 20, plein prend "oui"
	patron0 est un casier de nombres valant 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1
	patron1 est un casier de nombres valant 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1
	patron2 est un casier de nombres valant 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0
	patron3 est un casier de nombres valant 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1
	patron4 est un casier de nombres valant 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1
	patron5 est un casier de nombres valant 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1
	patron6 est un casier de nombres valant 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1
	patron7 est un casier de nombres valant 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1
	patron8 est un casier de nombres valant 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
	patron9 est un casier de nombres valant 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1
	nombres est un casier de casier valant patron0, patron1, patron2,     			patron3, patron4, patron5, patron6, patron7, patron8, patron9
	/*onglet bouton*/
	b1 est un bouton, texte prend "Blanc", x prend 30, y prend 60, infobulle prend "Ceci est une réponse...",
		icône prend "medias/blanc.png", couleurtexte prend "blanc", couleurfond prend "rouge"
	b2 est un bouton, texte prend "Noir", x prend 150, y prend 60, infobulle prend "Ceci est une réponse...",
		icône prend "medias/rouge.png", couleurfond prend "rouge"
	l1 est un étiquette, texte prend "Quelle est la couleur du cheval blanc d'Henri IV ?",
			x prend 30, y prend 30,	infobulle prend "Ceci est une question..."
	l2 est un étiquette, texte prend "", x prend 30, y prend 150
	/*onglet table*/
	table est un table, x prend 10, y prend 10,hauteur prend 200 , largeur prend 200
	b_table est un bouton, texte prend "Afficher la table", x prend 10, y prend 230
	b_ajouter est un bouton, texte prend "Ajouter une ligne", x prend 250, y prend 30
	b_supprimer est un bouton, texte prend "Supprimer les lignes sélectionnées", x prend 250, y prend 70
	boite_table est un boite, x prend 10, y prend 260, largeur prend 200, hauteur prend 100
	ligne est un nombre valant 3
	/*onglet image*/
	scrolleur est un scrolleur, largeur prend 300, hauteur prend 250, x prend 50, y prend 50
	image est un ximage, x prend 1, y prend 1,hauteur prend 300 , largeur prend 400, source prend "medias/villette1.jpg"
	photos est un casier de texte valant "medias/villette1.jpg", "medias/villette2.jpg", "medias/villette3.jpg"
	slider est un slider, x prend 50, y prend 370, minimum prend 0, maximum prend 2, valeur prend 0
	l_image est un étiquette, texte prend "Utilisez le slider pour changer l'image", x prend 280, y prend 375
	/*onglet radio*/
	panneau_radio_0 est un panneau, x prend 200, y prend 20, couleurfond prend "gris perle", largeur prend 300, 
			hauteur prend 350, visible prend "oui"
	panneau_radio_1 est un panneau, x prend 200, y prend 20, couleurfond prend "bleu fumée", largeur prend 300, 
			hauteur prend 350, visible prend "non"
	panneau_radio_2 est un panneau, x prend 200, y prend 20, couleurfond prend "platine", largeur prend 300, 
			hauteur prend 350, visible prend "non"
	panneau_radio_3 est un panneau, x prend 200, y prend 20, couleurfond prend "vanille", largeur prend 300, 
			hauteur prend 350, visible prend "non"
	liste est un liste, x prend 10, y prend 40
	valeurs est un casier de texte valant "Pierre", "Paul", "Jacques", "Matthieu", "Jean", "Barnard", "Hugo"
	boite_radio est un boite, x prend 10, y prend 240, largeur prend 200, hauteur prend 100
	explication0 est un étiquette, texte prend "<-- choisissez un type de composant", x prend 10, y prend 10
	explication1 est un étiquette, texte prend "Sélectionnez une ou plusieurs valeurs : ", x prend 10, y prend 10
	boutonradio 1 est un boutonradio, x prend 10, y prend 20, texte prend "Les listes"
	boutonradio 2 est un boutonradio, x prend 10, y prend 90, texte prend "Le sélecteur"
	boutonradio 3 est un boutonradio, x prend 10, y prend 160, texte prend "Les cases à cocher"
	groupe est un groupeboutonradio
	explication3 est un étiquette, texte prend "Au petit déjeuner, je veux : ", x prend 10, y prend 10
	//explication4 est un étiquette, texte prend "Composant xtableau :", x prend 10, y prend 220
	case 1 est un caseàcocher, x prend 10, y prend 60, texte prend "Croissant"
	case 2 est un caseàcocher, x prend 10, y prend 100, texte prend "Beurre"
	case 3 est un caseàcocher, x prend 10, y prend 140, texte prend "Confiture"
	case 4 est un caseàcocher, x prend 10, y prend 180, texte prend "Pain"
	éléments est un casier de caseàcocher valant case 1, case 2, case 3, case 4
	macommande est un étiquette, texte prend "", x prend 10, y prend 220
	//tableau est un xtableau, x prend 10, y prend 240, largeur prend 250, hauteur prend 100
	l_sélecteur est un étiquette, texte prend "Utilisez le sélecteur pour changer la couleur du panneau",
			x prend 20, y prend 5, taille prend -1
	l_sélecteur_b est un étiquette, texte prend "ou entrez directement le nom de la couleur", x prend 20, y prend 20,
			taille prend -1
	sélecteur est un sélecteur, x prend 20, y prend 40, mode prend "éditable"
	/*pop-up*/
	popup est un popup
	l_barre est un étiquette, texte prend "Une barre avec des boutons :", x prend 10, y prend 10
	barre est un barre, x prend 10, y prend 30
	b_popup_1 est un bouton, texte prend "Un message", icône prend "medias/image-x-generic.png"
	b_popup_2 est un bouton, texte prend "Un message avec une icône", icône prend "medias/internet-group-chat.png"
	b_popup_3 est un bouton, texte prend "Une question", icône prend "medias/internet-news-reader.png"
	b_popup_4 est un bouton, texte prend "Une question avec une icône", icône prend "medias/post.png"
	b_popup_5 est un bouton, texte prend "Votre date de naissance ...", x prend 30, y prend 130
	b_popup_6 est un bouton, texte prend "Ouvrir un sousformulaire ...", x prend 10, y prend 130
	champ1 est un champ, x prend 250, y prend 70, mode prend "lecture"
	champ2 est un champ, x prend 250, y prend 100, mode prend "secret"
	sousform est un sousformulaire, titre prend "Sousformulaire", largeur prend 400, hauteur prend 300, 
			icône prend "medias/logo.png", visible prend "non"
	l_sousform est un étiquette, texte prend "<html>
			<h2>Le composant Sousformulaire</h2>
			Le sousformulaire permet de créer des fenêtres modales.<br> 
			Une fenêtre modale bloque la souris sur cette fenêtre. <br>
			Vous ne pouvez accéder au formulaire <i>parent</i>.<br>
			Cliquez sur <b>sortir</b> pour fermer cette fenêtre !<html>", x prend 10, y prend 10
	b_sousform est un bouton, texte prend "Sortir !", x prend 10, y prend 230
	/*fx*/
	explication_fx est un étiquette, texte prend "Changer la transparence de la fenêtre :", x prend 10, y prend 10
	slider_fx est un slider, x prend 10, y prend 30, minimum prend 0, maximum prend 100, valeur prend 100
	case_bordure est un caseàcocher, x prend 10, y prend 70, texte prend "Afficher la bordure de la fenêtre ?", valeur prend "vrai"
	case_audessus est un caseàcocher, x prend 10, y prend 100, texte prend "Fenêtre toujours au-dessus ?"
	/*im*/
	serveur est un serveur
	l_info_im est un étiquette, texte prend "<html>
			<h2>Le Service de Messagerie Instantanée Linotte (Le Smil :-)</h2>
			<hr>
			Cet exemple vous connecte sur un serveur de messagerie écrit en langage <font color=red>Linotte</font> !<br><br>
			Ce service n'a qu'un but : démontrer que Linotte est un langage polyvalent malgré sa simplicité !<br> 
			Vous pouvez étudier cet exemple à partir des deux fichiers suivants :<br>
				<ul>
					<li>j_expert/mesagerie_instantanee.liv</li>
					<li>j_expert/TCPServeur.liv</li>
				</ul>
			Attendez d'avoir une certaine expérience avant de les étudier !<br><br>
			<font color=red><b>Le greffon TCPLinotte est nécessaire. <br>Une fenêtre va s'ouvrir pour demander son téléchargement. Dites oui !</b></font><br> 
			<br> 
			Cliquez sur <b>Démarrer la discution</b> pour discuter en ligne !
<html>", x prend 10, y prend 10
	b_demarrer_im est un bouton, texte prend "Démarrer la discution", x prend 30, y prend 300
	im_info est un étiquette, texte prend "Votre identifiant : ", x prend 5, y prend 10
	im_login est un champ, x prend 150, y prend 5, texte prend "démonstration"
	im_boite_titre est un étiquette, texte prend "Votre message : ", x prend 5, y prend 40, visible prend "non"//
	im_boite est un boite,x prend 5, y prend 60, largeur prend 400, hauteur prend 160, visible prend "oui",
			 infobulle prend "[Contrôle]+[Entrée] pour envoyer le message"
	im_b1 est un bouton, texte prend "<html><b><font color=red>Envoyer le message</font></b></html>", x prend 5, y prend 230, 
				visible prend "oui"//
	im_tableau est un xtableau, x prend 5, y prend 280, largeur prend 700, hauteur prend 140
	im_e_ip est un étiquette, texte prend "Serveur : ", x prend 5, y prend 455
	im_c_ip est un champ, x prend 80, y prend 450, texte prend "langagelinotte.no-ip.org"
	im_e_port est un étiquette, texte prend "Port : ", x prend 280, y prend 455
	im_c_port est un champ, x prend 330, y prend 450, texte prend "7778", taille prend 5
	im_connecter est un bouton, texte prend "<html><b><font color=red>Connecter</font></b></html>", x prend 410, y prend 450
	im_amis est un étiquette, texte prend "Listes des messagers : ", x prend 550, y prend 10, visible prend "non"
	im_scrolleur est un scrolleur, largeur prend 140, hauteur prend 240, x prend 550, y prend 30, visible prend "non"
	im_liste est un liste, valeurs prend "", x prend 20, y prend 40, visible prend "non"

genègraphe :
	colonnes est un casier de texte valant "Prénom", "Nom", "Âge"
	début
		ajoute onglet & présentation & indicateur & m1 dans form
		ajoute m2 & sm1 & sm2 dans m1
		ajoute case_menu dans m2
		form.changementdimension(faux)
		fais réagir sm1 à "clic souris" pour à propos
		fais réagir sm2 à "clic souris" pour fermer la fenêtre
		fais réagir case_menu à "clic souris" pour changer icône
		/*Les boutons :*/
		valeur @ indicateur prend 10
		fais réagir form à "clic souris" pour fermer la fenêtre
		ajoute panneau_boutons dans onglet
		onglet.titre("Le bouton",0)
		onglet.icône("medias/onglet.png",0)
		ajoute b1 & b2 & l1 & l2 dans panneau_boutons
		fais réagir b2 à "clic souris" pour réponse fausse
		fais réagir b1 à "souris entrante" pour bouger bouton
		fais réagir b1 à "clic souris" pour bouger bouton
		/*La toile :*/
		valeur @ indicateur prend 20
		ajoute panneau_toile dans onglet
		ajoute xtoile dans panneau_toile
		onglet.titre("Toile 1",1)
		onglet.icône("medias/onglet.png",1)
		appelle décor
		/*La toile horloge :*/
		valeur @ indicateur prend 25
		ajoute panneau_toile2 dans onglet
		ajoute xtoile2 dans panneau_toile2
		onglet.titre("Toile 2",2)
		onglet.icône("medias/onglet.png",2)
		appelle horloge
		/*Les tables :*/
		valeur @ indicateur prend 30
		ajoute panneau_table dans onglet
		onglet.titre("La table",3)
		onglet.icône("medias/onglet.png",3)
		ajoute table & b_table & boite_table & b_ajouter & b_supprimer dans panneau_table
		fais réagir b_table à "clic souris" pour afficher table
		fais réagir b_ajouter à "clic souris" pour ajouter ligne
		fais réagir b_supprimer à "clic souris" pour supprimer ligne
		table.colonnes (colonnes)
		pour chaque ligne, table.ajouterligne()
		table.valeur(0,0,"Gilbert")
		table.valeur(0,1,"Dupond")
		table.valeur(0,2,35)
		table.valeur(1,0,"Robert")
		table.valeur(1,1,"Dupont")
		table.valeur(1,2,43)
		table.valeur(2,0,"Hugo")
		table.valeur(2,1,"Dupons")
		table.valeur(2,2,29)
		pour chaque ligne
			c est un nombre valant joker
			pour chaque 3
				table.écriture(c,joker,vrai)
			ferme
		ferme
		/*L'image*/
		valeur @ indicateur prend 40
		ajoute panneau_image dans onglet
		ajoute scrolleur & slider & l_image dans panneau_image
		ajoute image dans scrolleur
		onglet.titre("Une image",4)
		onglet.icône("medias/onglet.png",4)
		fais réagir slider à "clic souris" pour changer image
		/*3D :*/
		valeur @ indicateur prend 50
		ajoute panneau_3D dans onglet
		onglet.titre("",5)
		onglet.icône("medias/onglet.png",5)

		/*Boutons radio :*/
		valeur @ indicateur prend 60
		ajoute panneau_radio dans onglet
		onglet.titre("Panneaux",6)
		onglet.icône("medias/onglet.png",6)
		ajoute boutonradio 1 dans panneau_radio
		ajoute boutonradio 2 dans panneau_radio
		ajoute boutonradio 3 dans panneau_radio
		ajoute boutonradio 1 & boutonradio 2  & boutonradio 3 dans groupe
		ajoute panneau_radio_0 dans panneau_radio
		ajoute panneau_radio_1 dans panneau_radio
		ajoute panneau_radio_2 dans panneau_radio
		ajoute panneau_radio_3 dans panneau_radio
		ajoute explication0 dans panneau_radio_0
		fais réagir boutonradio 1 à "clic souris" pour bouton radio sélectionné 1
		fais réagir boutonradio 2 à "clic souris" pour bouton radio sélectionné 2
		fais réagir boutonradio 3 à "clic souris" pour bouton radio sélectionné 3
		boutonradio 1.sélectionner()
		ajoute liste dans panneau_radio_1
		ajoute boite_radio dans panneau_radio_1
		ajoute explication1 dans panneau_radio_1
		liste.chargevaleurs(valeurs)
		liste.sélectionmultiple()
		fais réagir liste à "clic souris" pour affichage radio 1
		ajoute l_sélecteur & l_sélecteur_b & sélecteur dans panneau_radio_2
		sélecteur.chargevaleurs(couleurs)
		fais réagir sélecteur à "clic souris" pour changer la couleur
		ajoute explication3 dans panneau_radio_3 // & explication4 & tableau
		ajoute case 1 dans panneau_radio_3
		ajoute case 2 dans panneau_radio_3
		ajoute case 3 dans panneau_radio_3
		ajoute case 4 dans panneau_radio_3
		ajoute macommande dans panneau_radio_3
		fais réagir case 1 à "clic souris" pour changer bouton
		fais réagir case 2 à "clic souris" pour changer bouton
		fais réagir case 3 à "clic souris" pour changer bouton
		fais réagir case 4 à "clic souris" pour changer bouton
			/*Pop-up :*/
		valeur @ indicateur prend 70
		ajoute panneau_popup dans onglet		
		/*ajoute popup dans panneau_popup*/
		ajoute l_barre & barre dans panneau_popup
		onglet.titre("Pop-up",7)
		onglet.icône("medias/onglet.png",7)
		ajoute b_popup_1 dans barre
		barre.séparateur()
		fais réagir b_popup_1 à "clic souris" pour popup message
		ajoute b_popup_2 dans barre
		barre.espace(160)
		fais réagir b_popup_2 à "clic souris" pour popup message avec icône
		ajoute b_popup_3 dans barre
		barre.séparateur()
		ajoute champ1 dans panneau_popup
		fais réagir b_popup_3 à "clic souris" pour popup question
		ajoute b_popup_4 dans barre
		ajoute champ2 dans panneau_popup
		fais réagir b_popup_4 à "clic souris" pour popup question avec icône
		ajoute b_popup_6 dans panneau_popup
		ajoute l_sousform & b_sousform dans sousform
		fais réagir b_popup_6 à "clic souris" pour afficher sousformulaire
		fais réagir b_sousform à "clic souris" pour cacher sousformulaire
		/*fx*/
		ajoute panneau_fx dans onglet
		onglet.titre("Fx",8)
		onglet.icône("medias/onglet.png",8)
		ajoute explication_fx & slider_fx & case_bordure & case_audessus dans panneau_fx
		fais réagir slider_fx à "clic souris" pour changer transparence
		fais réagir case_bordure à "clic souris" pour changer bordure
		fais réagir case_audessus à "clic souris" pour changer audessus
		/*messagerie instantanée*/
		ajoute panneau_im dans onglet
		onglet.titre("Discution en ligne",9)
		onglet.icône("medias/onglet.png",9)
		fais réagir panneau_im à "clic souris" pour à propos
		ajoute b_demarrer_im & l_info_im dans panneau_im
		fais réagir b_demarrer_im à "clic souris" pour demarrer im
		/*********************************/
		/*Affichage de tous les onglets :*/
		visible@indicateur prend "non"
		visible@onglet prend "oui"
		/*Boucle infinie :*/
		tant que vrai
			temporise
		ferme

/*Pour l'affichage de la toile*/

décor :
	début
		projette fond & crayon
		parcours fractale
		reviens

fractale :
	x & y & a & b est un nombre
	début
		Pour x de 0 à largeur@fond
			pour y de 0 à hauteur@fond
				a prend zonex + x * zonew / (largeur@fond)
				b prend zoney + y * zoneh / (hauteur@fond)
				si converge(a,b)
					pique crayon à x et y
				ferme
			ferme
		ferme
		reviens

converge :
	*a est un nombre
	*b est un nombre
	x est un nombre
	y est un nombre
	ynew est un nombre
	xnew est un nombre
	début
		pour chaque 30
			xnew = x * x - y * y + a
			ynew = 2 * x * y + b
			si ((abs xnew) sup 2) ou ((abs ynew) sup 2), retourne faux
			x prend xnew
			y prend ynew
		ferme
		retourne vrai

/*Pour l'onglet bouton*/

réponse fausse :
	*b est un bouton
	début
		Texte @ l2 prend "Tu es bien trop mauvais pour continuer le test !"
		attends 3 secondes
		Reviens

bouger bouton :
	*b est un bouton
	posx est un nombre valant 320
	posy est un nombre valant 220
	début
		mélange posx & posy
		x @ b1 prend posx + 30
		y @ b1 prend posy + 30
		Reviens

/*Pour l'onglet table*/

afficher table :
	*b est un bouton
	contenu est un texte
	début
		pour chaque ligne
			contenu prend contenu + table.retournevaleur(joker,0) + " " + table.retournevaleur(joker,1) + " à " +
					table.retournevaleur(joker,2) + " ans"
			contenu prend contenu + chr 13 + chr 10
		ferme
		texte @ boite_table prend contenu
		reviens

ajouter ligne :
	*b est un bouton
	début
		table.ajouterligne()
		incrémente ligne
		table.valeur(ligne-1,0,"")
		table.valeur(ligne-1,1,"")
		table.valeur(ligne-1,2,0)
		table.écriture(ligne-1,0,vrai)
		table.écriture(ligne-1,1,vrai)
		table.écriture(ligne-1,2,vrai)
		reviens

supprimer ligne :
	*b est un bouton
	lignes est un casier de nombres
	i est un nombre valant 0
	début
		lignes = table.retounesélection()
		Pour chaque lignes
			table.supprimerligne(joker - i)
			incrémente i
			décrémente ligne
		ferme
		reviens

/*Pour l'onglet image*/

changer image :
	*slider est un slider
	début
		source@image prend photos{valeur@slider}
		reviens

fermer la fenêtre :
	début
		// Si le client en Smil est démarré :
		essaie parcours déconnexion
		termine

affichage radio 1 :
	*l est un liste
	champ est un texte
	début
		pour chaque liste.valeurs()
			champ prend champ + joker + ";
"
		ferme
		texte @ boite_radio prend champ
		reviens

bouton radio sélectionné 1 :
	*br est un boutonradio
	début
		visible@panneau_radio_0 prend "non"
		visible@panneau_radio_1 prend "oui"
		visible@panneau_radio_2 prend "non"
		visible@panneau_radio_3 prend "non"
		reviens

bouton radio sélectionné 2 :
	*br est un boutonradio
	début
		visible@panneau_radio_0 prend "non"
		visible@panneau_radio_1 prend "non"
		visible@panneau_radio_2 prend "oui"
		visible@panneau_radio_3 prend "non"
		reviens

bouton radio sélectionné 3 :
	*br est un boutonradio
	début
		visible@panneau_radio_0 prend "non"
		visible@panneau_radio_1 prend "non"
		visible@panneau_radio_2 prend "non"
		visible@panneau_radio_3 prend "oui"
		reviens

changer bouton :
	*cac est un caseàcocher
	commande est un texte
	début
		pour chaque éléments
			si (valeur@joker) == "vrai"
				commande prend commande + " " + texte@joker
			ferme
		ferme
		texte@macommande prend commande
		reviens

changer la couleur :
	*s est un sélecteur
	début
		couleurfond@panneau_radio_2 prend valeur @ s
		reviens

popup message :
	*s est un bouton
	début
		popup.message("C'est simple d'afficher un message !")
		reviens

popup message avec icône :
	*s est un bouton
	début
		popup.messageeticône("C'est simple d'afficher un message avec un icône !","medias/rouge.png")
		reviens

popup question :
	*s est un bouton
	options est un casier de texte valant "génial", "excellent", "indispensable"
	début
		texte@champ1 prend popup.question("Penses-tu que Linotte est un langage",options)
		reviens

popup question avec icône :
	*s est un bouton
	options est un casier de texte valant "génial", "excellent", "indispensable"
	début
		texte@champ2 prend popup.questioneticône("Penses-tu que Linotte est un langage",options,"medias/blanc.png")
		reviens

popup date :
	*s est un bouton
	début
		/*texte@champ3 prend popup.sélectionnerdate()*/
		reviens

changer transparence :
	*slider est un slider
	début
		form.transparence(valeur@slider)
		reviens

changer bordure :
	*cac est un caseàcocher
	début
		si (valeur@cac) == "vrai", form.bordure(vrai)
		sinon form.bordure(faux)
		reviens

changer audessus :
	*cac est un caseàcocher
	début
		si (valeur@cac) == "vrai", form.audessus(vrai)
		sinon form.audessus(faux)
		reviens

à propos :
	début
		form.àpropos()
		reviens

changer icône :
	*cac est un menucaseàcocher
	début
		icône@cac prend ter(((valeur@cac) == "vrai"),"medias/rouge.png","medias/blanc.png")
		reviens

afficher sousformulaire :
	*s est un bouton
	début
		visible@sousform prend "oui"
		reviens

cacher sousformulaire :
	*s est un bouton
	début
		visible@sousform prend "non"
		reviens

/*
		***************************************
		Client du serveur de messagerie Linotte
		***************************************
*/

demarrer im :
	*s est un bouton
	début
		visible@l_info_im prend "faux"
		visible@s prend "faux"
		~greffon 1 tcpclient 0.2 "http://abaque.googlecode.com/files/TCPLinotte.zgl"
		essaie
			client est un tcpclient
			// Ainsi, l'objet client peut être visible depuis un acteur global :
			attache client à serveur
		ferme
		sinon
			// Sans les greffons, ça ne peut pas marcher !
			visible@s prend "oui"
			visible@l_info_im prend "oui"
			reviens
		ferme
		texte@im_login prend (client@serveur).nommachine()
		ajoute im_amis & im_boite & im_boite_titre & im_b1 & im_tableau & im_info & im_login & im_e_ip dans panneau_im
		ajoute im_c_ip & im_e_port & im_c_port & im_connecter & im_scrolleur dans panneau_im
		ajoute im_liste dans im_scrolleur
		fais réagir im_boite à "clic souris" pour envoyer message
		fais réagir im_b1 à "clic souris" pour envoyer message
		fais réagir im_connecter à "clic souris" pour connexion
		appelle liste amis
		appelle connexion
		tant que vrai
			temporise
		ferme

attendre message :
	message est un packet
	début
		tant que vrai
			essaie
				// On attend un message du serveur :
				message prend (client@serveur).recevoir()
				// *************
				// Commande PING
				// *************
				si (commande@message)=="ping"
					parcours pong
				ferme
				// ****************
				// Commande VERSION
				// ****************
				sinon si (commande@message)=="version"
					affiche "version du serveur : " + message@message
				ferme
				// *******************
				// Commande LISTE AMIS
				// *******************
				sinon si (commande@message)=="liste amis"
					valeurs@im_liste prend message@message
				ferme
				// *******************
				// Commandes autres...
				// *******************
				sinon
					affiche nom@message + "(" + horodatage@message + ") > " + message@message
					form.clignoter()
				ferme
			ferme
			sinon
				affiche "Connexion perdue avec le serveur"
				parcours changer affichage avec "oui", "non"
				visible@im_connecter prend "oui"
				reviens
			ferme
		ferme

envoyer message :
	message est un packet
	début
		// construction du packet à envoyer
		message@message prend texte@im_boite
		commande@message prend "parler"
		nom@message prend texte@im_login
		parcours horodater de commun avec message
		// Envoi du packet au serveur
		(client@serveur).envoyer(message)
		texte@im_boite prend ""
		reviens

connexion :
	port est un nombre
	début
		essaie
			visible@im_connecter prend "non"
			convertis texte@im_c_port en port
			(client@serveur).connexion(texte@im_c_ip, port)
			//affiche "nous sommes connecté au serveur ..."
			parcours version
			parcours historique
			appelle attendre message
			parcours changer affichage avec "non", "oui"
		ferme
		sinon
			affiche "impossible de se connecter ..."
			visible@im_connecter prend "oui"
		ferme
		reviens

quitter :
	message est un packet
	début
		// construction du packet à envoyer
		nom@message prend texte@im_login
		commande@message prend "quitter"
		affiche "nous quittons le serveur ..."
		essaie (client@serveur).envoyer(message)
		termine

déconnexion :
	message est un packet
	début
		// construction du packet à envoyer
		nom@message prend texte@im_login
		commande@message prend "quitter"
		(client@serveur).envoyer(message)
		parcours changer affichage avec "oui", "non"
		visible@im_connecter prend "oui"
		reviens

changer affichage :
	*état 1 est un texte
	*état 2 est un texte
	début
		visible@im_e_ip prend état 1
		visible@im_c_ip prend état 1
		visible@im_e_port prend état 1
		visible@im_c_port prend état 1
		visible@im_boite_titre prend état 2
		visible@im_scrolleur prend état 2
		visible@im_amis prend état 2
		visible@im_liste prend état 2
		reviens

liste amis :
	message est un packet
	début
		commande@message prend "liste amis"
		tant que vrai
			// construction du packet à envoyer
			nom@message prend texte@im_login
			essaie (client@serveur).envoyer(message)
			sinon	valeurs@im_liste prend ""
			attends 3 seconde
		ferme

version :
	message est un packet
	début
		commande@message prend "version"
		// construction du packet à envoyer
		nom@message prend texte@im_login
		essaie (client@serveur).envoyer(message)
		reviens

historique :
	message est un packet
	début
		commande@message prend "historique"
		// construction du packet à envoyer
		nom@message prend texte@im_login
		essaie (client@serveur).envoyer(message)
		reviens

pong :
	message est un packet
	début
		commande@message prend "pong"
		// construction du packet à envoyer
		nom@message prend texte@im_login
		essaie (client@serveur).envoyer(message)
		reviens

horloge :
	position 1 est un nombre valant 0 + décallage
	position 2 est un nombre valant 80 + décallage
	position 3 est un nombre valant 220 + décallage
	position 4 est un nombre valant 300 + décallage
	position 5 est un nombre valant 440 + décallage
	position 6 est un nombre valant 520 + décallage
	h & m & s est un nombre
	début
		projette rond1 & rond2 & rond3 & rond4
		parcours init avec position 1, chiffre1
		parcours init avec position 2, chiffre2
		parcours init avec position 3, chiffre3
		parcours init avec position 4, chiffre4
		parcours init avec position 5, chiffre5
		parcours init avec position 6, chiffre6
		tant que vrai
			h prend heure
			m prend minute
			s prend seconde
			parcours analyse avec h, chiffre1, chiffre2
			parcours analyse avec m, chiffre3, chiffre4
			parcours analyse avec s, chiffre5, chiffre6
			si (s mod 2) == 0
				couleur@rond1 & couleur@rond2 & couleur@rond3 & couleur@rond4 prend lumière clair
			ferme
			sinon
				couleur@rond1 & couleur@rond2 & couleur@rond3 & couleur@rond4 prend lumière douce
			ferme
			attends 1 seconde
		ferme
		termine

init :
	* d est un nombre
	* c est un casier de polygone
	début
		parcours affiche avec #élément h, 111 + d, 139, c
		parcours affiche avec #élément h, 111 + d, 261, c
		parcours affiche avec #élément h, 111 + d, 383, c
		parcours affiche avec #élément v, 100 + d, 150, c
		parcours affiche avec #élément v, 100 + d, 210, c
		parcours affiche avec #élément v, 100 + d, 272, c
		parcours affiche avec #élément v, 100 + d, 332, c
		parcours affiche avec #élément v, 150 + d, 150, c
		parcours affiche avec #élément v, 150 + d, 210, c
		parcours affiche avec #élément v, 150 + d, 272, c
		parcours affiche avec #élément v, 150 + d, 332, c
		Reviens

analyse :
	* n est un nombre
	* c1 est un casier de polygone
	* c2 est un casier de polygone
	début
		parcours colorise avec nombres{entier(n/10)}, c1
		parcours colorise avec nombres{décimal(n/10)*10}, c2
		Reviens

affiche :
	*temporaire est un polygone
	*x est un nombre
	*y est un nombre
	*casier est un casier de polygone
	début
		x@temporaire prend x
		y@temporaire prend y
		projette temporaire
		ajoute temporaire dans casier
		reviens

colorise :
	* modèle est un casier de nombre
	* chiffre est un casier de polygone
	position est un nombre valant 0
	début
		pour chaque modèle
			si joker == 1, couleur@(chiffre{position}) prend lumière clair
			sinon couleur@(chiffre{position}) prend lumière douce
			position prend position + 1
		ferme
		reviens