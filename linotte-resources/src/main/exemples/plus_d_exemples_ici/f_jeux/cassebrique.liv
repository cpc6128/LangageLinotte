espèces
	pouvoir est un texte
	attaque & sens est un nombre
	espèce brique hérite de rectangle et contient pouvoir
	espèce palet hérite de cercle et contient attaque, sens
globale
	/*Vous pouvez modifier la taille du jeu :*/
	zoom est un nombre valant 1
	joueur1 est un palet,  plein prend "oui", rayon prend 5 * zoom, couleur prend "rouge", taille prend 1, y prend 80 * zoom, angle prend 45, position prend 2, attaque prend 45, sens prend 0
	raquette est un rectangle, couleur prend "anthracite", hauteur prend 5 * zoom, largeur prend 26 * zoom, plein prend "oui",  x prend 10 * zoom, y prend 140 * zoom
	gameover est un nombre valant 0
	briques est un casier de brique
	démonstration est un nombre valant 0
	niveau  est un nombre valant 1
	vitesse  est un nombre valant 7
	score  est un nombre valant 0
	gscore  est un graffiti, couleur prend "violet",  x prend 10 * zoom, y prend 130 * zoom, texte prend "Linotte BustOut v1.1", taille prend 1 * zoom, transparence prend 40

principale :
	fond  est une toile, couleur prend "argile", hauteur prend 150 * zoom, largeur prend 200 * zoom, image prend "http://langagelinotte.free.fr/wordpress/bustout.jpg", pointeur prend "croix"
	x  est un nombre
	Tant que gameover != -1
		Efface toile
		Projette fond & joueur1 & raquette & gscore
		x de joueur1 prend 150 * zoom
		Mélange x de joueur1
		Ajoute 30 dans x de joueur1
		Parcours affichage
		Parcours pause avec "Jouer ?", 0
		Appelle moteur palet
		Appelle publicité
		Tant que gameover == 0
			x prend sourisx - 12
			Si x > 175 * zoom, x prend 175 * zoom
			sinon si x < 0, x prend 0
			Si démonstration == 1
				x de raquette prend x de joueur1 - 13
				Attends 5 millisecondes
			Ferme
			sinon
				x de raquette prend x
				Temporise
				Temporise
				Temporise
				Temporise 1 secondes
			Ferme
		Ferme
		Si gameover == 1, parcours game over
		sinon parcours bravo
		Parcours valeurs initiales
	Ferme

Pause :
	*info  est un texte
	*temps  est un nombre
	message  est un graffiti, couleur prend "nacarat",  x prend 80 * zoom, y prend 110 * zoom, texte prend "", taille prend 1 * zoom, position prend 3
	test  est un nombre valant 1
	texte de message prend info
	Projette message
	Appelle clignotement avec test, message
	Attends temps secondes
	Vide touches
	Temporise
	Si touche == "d", démonstration prend 1
	sinon démonstration prend 0
	test prend 0
	Efface message
	Reviens

clignotement :
	*test  est un nombre
	*message  est un graffiti
	boucle  est un nombre
	Tant que test == 1
		boucle prend boucle + 10
		transparence de message prend abs (cos boucle)  * 100
		Attends 100 millisecondes
	Ferme
	Reviens

Afficher :
	*p  est un brique
	*r  est un nombre
	*v  est un nombre
	*c  est un texte
	Ajoute p dans briques
	déplace p vers r * 20 * zoom et v * 10 * zoom
	pouvoir de p prend c
	si c == "dur", couleur de p prend (r*10) + " " + (v*10) + " " + (v+r)*10
	sinon couleur de p prend 200-(r*10) + " " + (200-v*10) + " " + (v+r)*10
	Reviens

moteur palet :
	Tant que gameover == 0
		Attends vitesse millisecondes
		Avance joueur1 de 1 * zoom
			/*Gestion des collisions avec raquette*/
		Si joueur1.collision(raquette)
			Parcours calculer attaque
			Parcours tourne palet simple avec 0
			y de joueur1 prend (y de raquette) - (hauteur de raquette)
		Ferme
		sinon si (x de joueur1) > (200 * zoom - (rayon de joueur1))
			Parcours tourne palet simple avec 1
			x de joueur1 prend 200 * zoom - rayon de joueur1
		Ferme
		sinon si ( y de joueur1) < (5 * zoom)
			Parcours tourne palet simple avec 0
			y de joueur1 prend 5 * zoom + zoom
		Ferme
		sinon si (x de joueur1) < (5 * zoom)
			Parcours tourne palet simple avec 1
			x de joueur1 prend 5 * zoom
		Ferme
		sinon si (y de joueur1) > (140 * zoom)
			gameover prend 1
			Reviens
		Ferme
			/*Gestion des collisions avec les briques*/
		Pour chaque briques
			Si joueur1.collision(joker)
				Si (pouvoir de joker) == "dur"
						/*pouvoir dur*/
					Parcours tourne palet avec joker
					Transparence de joker prend transparence de joker - 50
					Si (transparence de joker) < 10
						Efface joker
						Ôte joker de briques
						Score prend score + 20
					Ferme
				Ferme
				sinon
						/*brique simple*/
					Efface joker
					Ôte joker de briques
					Parcours tourne palet avec joker
					Score prend score + 10
				Ferme
			Ferme
		Ferme
		texte de gscore prend score
		Si briques.taille() = 0
			gameover prend 2
			Reviens
		Ferme
	Ferme
	Reviens

calculer angle :
	Si (sens de joueur1) == 0, angle de joueur1 prend attaque de joueur1
	sinon si (sens de joueur1) == 1, angle de joueur1 prend 180 - (attaque de joueur1)
	sinon si (sens de joueur1) == 2, angle de joueur1 prend 180 + (attaque de joueur1)
	sinon angle de joueur1 prend 360 - (attaque de joueur1)
	Reviens

Calculer attaque :
	attaque de joueur1 prend 50 - abs ( x de  joueur1 - ( largeur de raquette / 2 + x de raquette ))
	Reviens

Tourne palet simple :		
	/*0 horizontal, 1 vertical*/
	*sens  est un nombre
	Si sens == 0
		Si (sens de joueur1) == 0, sens de joueur1 prend 3
		sinon si (sens de joueur1) == 3, sens de joueur1 prend 0
		sinon si (sens de joueur1) == 2, sens de joueur1 prend 1
		sinon (sens de joueur1) prend 2
	Ferme
	sinon
		Si (sens de joueur1) == 3, sens de joueur1 prend 2
		sinon si (sens de joueur1) == 2, sens de joueur1 prend 3
		sinon si (sens de joueur1) == 0, sens de joueur1 prend 1
		sinon (sens de joueur1) prend 0
	Ferme
	Parcours calculer angle
	Reviens

Tourne palet :
	*b est un brique
	orientation  est un nombre valant 0
	Recule joueur1 de 1 * zoom
		/*0 = choc horizontal*/
		/*1 = choc vertical*/
	Si (( y de joueur1) - (rayon de joueur1)) > (y de b + hauteur de b)
		orientation prend 1
	Ferme
	sinon si (arrondi ((y de joueur1) + (rayon de joueur1))) == (y de b)
		orientation prend 1
	Ferme
	Si orientation == 1
		Si (sens de joueur1) == 0, sens de joueur1 prend 3
		sinon si (sens de joueur1) == 3, sens de joueur1 prend 0
		sinon si (sens de joueur1) == 2, sens de joueur1 prend 1
		sinon si (sens de joueur1) == 1, sens de joueur1 prend 2
	Ferme
	sinon
		Si (sens de joueur1) == 0, sens de joueur1 prend 1
		sinon si (sens de joueur1) == 1, sens de joueur1 prend 0
		sinon si (sens de joueur1) == 2, sens de joueur1 prend 3
		sinon si (sens de joueur1) == 3, sens de joueur1 prend 2
	Ferme
	Parcours calculer angle
	Avance joueur1 de 1 * zoom
	Reviens

Publicité :
	pub  est un graffiti, texte prend "Niveau " + niveau, x prend 60 * zoom, y prend 80 * zoom,     			transparence prend 20, angle prend 20, taille prend 3 * zoom, position prend 1
	Projette pub
	Tant que gameover == 0
		Tourne à droite pub de 1
		Attends 0.01 seconde
	Ferme
	Reviens

Game over :
	Parcours pause avec "Perdu !" , 3
	Niveau prend 1
	Vitesse prend 7
	Score prend 0
	Reviens

Bravo :
	Parcours pause avec "Bravo !" , 5
	Niveau prend niveau + 1
	Reviens

Valeurs initiales :
	x de joueur1 prend 30 * zoom
	y de joueur1 prend 80 * zoom
	angle de joueur1 prend 45
	sens de joueur1 prend 0
	x de raquette prend 10 * zoom
	y de raquette prend 140 * zoom
	Vide briques
	gameover prend 0
	Reviens

Affichage :
	Si niveau == 1, parcours niveau1
	sinon si niveau == 2, parcours niveau2
	sinon si niveau == 3, parcours niveau3
	sinon si niveau == 4, parcours niveau4
	sinon si niveau == 5, parcours niveau5
	sinon si niveau == 6, parcours niveau6
	sinon si niveau == 7, parcours niveau7
	sinon
		niveau prend 1
		Parcours niveau1
		Si vitesse > 0, vitesse prend vitesse - 1
	Ferme
	Reviens

Niveau1 :
	r  est un nombre valant 0
	p est un brique, plein prend "oui", x prend -200, y prend -200, hauteur prend 10 * zoom, largeur prend 20 * zoom, position prend 2
	pouvoir  est un casier de texte valant "" ,"" ,"", ""
	Projette p
	De 0 à 9
		r prend joker
		De 0 à 3
			Parcours afficher avec #p, r , joker, pouvoir {joker}
		Ferme
	Ferme
	Reviens

Niveau2 :
	r  est un nombre valant 0
	p est un brique, plein prend "oui", x prend -200, y prend -200, hauteur prend 10 * zoom, largeur prend 20 * zoom, position prend 2
	pouvoir  est un casier de texte valant "" ,"" ,"" ,"" ,  "" , "dur"
	Projette p
	De 0 à 9
		r prend joker
		De 0 à 5
			Parcours afficher avec #p, r , joker, pouvoir {joker}
		Ferme
	Ferme
	Reviens

Niveau3 :
	r  est un nombre valant 0
	p est un brique, plein prend "oui", x prend -200, y prend -200, hauteur prend 10 * zoom, largeur prend 20 * zoom, position prend 2
	pouvoir  est un casier de texte valant "" ,"" ,"dur" ,"" ,  "dur" , "dur"
	Projette p
	De 0 à 9
		r prend joker
		De 0 à 5
			Parcours afficher avec #p, r , joker, pouvoir {joker}
		Ferme
	Ferme
	Reviens

Niveau4 :
	c  est un nombre valant 0
	l  est un nombre valant 0
	p est un brique, plein prend "oui", x prend -200, y prend -200, hauteur prend 10 * zoom, largeur prend 20 * zoom, position prend 2
	ligne1  est un casier de texte valant "dur" ,"" ,"" ,"", "" , "", "", "", "", "dur"
	ligne2  est un casier de texte valant "" ,"dur" ,"" ,"", "" , "", "", "", "dur", ""
	ligne3  est un casier de texte valant "" ,"" ,"dur" ,"", "" , "", "", "dur", "", ""
	ligne4  est un casier de texte valant "" ,"" ,"" ,"dur", "" , "", "dur", "", "", ""
	ligne5  est un casier de texte valant "" ,"" ,"" ,"", "dur" , "dur", "", "", "", ""
	lignes  est un casier de casier valant ligne1, ligne2, ligne3, ligne4, ligne5, ligne4, ligne3, ligne2, ligne1
	Projette p
	Pour chaque lignes
		c prend 0
		Pour chaque joker
			Parcours afficher avec #p, c , l, joker
			c prend c + 1
		Ferme
		l prend l + 1
	Ferme
	Reviens

Niveau5 :
	c  est un nombre valant 0
	l  est un nombre valant 0
	p est un brique, plein prend "oui", x prend -200, y prend -200, hauteur prend 10 * zoom, largeur prend 20 * zoom, position prend 2
	ligne1  est un casier de texte valant "dur" ,"dur" ,"dur" ,"dur", "dur" , "dur", "dur", "dur", "dur", "dur"
	ligne2  est un casier de texte valant "dur" ,"" ,"" ,"", "" , "", "", "", "", "dur"
	lignes  est un casier de casier valant ligne1, ligne2, ligne2, ligne2, ligne2, ligne2, ligne2, ligne2,ligne2, ligne1,ligne1
	Projette p
	Pour chaque lignes
		c prend 0
		Pour chaque joker
			si joker != ""
				Parcours afficher avec #p, c , l, joker
			ferme
			c prend c + 1
		Ferme
		l prend l + 1
	Ferme
	Reviens

Niveau6 :
	c  est un nombre valant 0
	l  est un nombre valant 0
	p  est un brique, plein prend "oui", x prend -200, y prend -200, hauteur prend 10 * zoom, largeur prend 10 * zoom, position prend 2
	ligne1  est un casier de texte valant "dur" ,"vide" ,"dur" ,"vide", "dur" , "vide", "dur", "vide", "dur", "vide"
	lignes  est un casier de casier valant ligne1, ligne1, ligne1, ligne1, ligne1, ligne1, ligne1, ligne1
	Projette p
	Pour chaque lignes
		c prend 0
		Pour chaque joker
			si joker != "vide"
				Parcours afficher avec #p, c , l, joker
			ferme
			c prend c + 1
		Ferme
		l prend l + 1
	Ferme
	y de joueur1 prend 90 * zoom
	Reviens

Niveau7 :
	c  est un nombre valant 0
	l  est un nombre valant 0
	p est un brique, plein prend "oui", x prend -200, y prend -200, hauteur prend 5 * zoom, largeur prend 5 * zoom, position prend 2
	ligne1  est un casier de texte valant "vide" ,"vide" ,"vide" ,"vide", "vide" , "vide", "vide", "vide", "vide", "vide"
	ligne2  est un casier de texte valant "vide" ,"vide" ,"dur" ,"vide", "vide" , "vide", "vide", "vide", "dur", "vide"
	lignes  est un casier de casier valant ligne1, ligne1, ligne1, ligne2, ligne1, ligne1, ligne1, ligne1
	Projette p
	Pour chaque lignes
		c prend 0
		Pour chaque joker
			si joker != "vide"
				Parcours afficher avec #p, c , l, joker
			ferme
			c prend c + 1
		Ferme
		l prend l + 1
	Ferme
	y de joueur1 prend 90 * zoom
	Reviens